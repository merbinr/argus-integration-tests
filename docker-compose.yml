services:
  catcher:
    build:
      context: ../catcher
      dockerfile: ../catcher/Dockerfile
    environment:
      CATCHER_HTTP_WEBHOOK_TOKEN: ${CATCHER_HTTP_WEBHOOK_TOKEN}
      CATCHER_OUTGOING_QUEUE_HOST: "catcher-outgoing-queue"
      CATCHER_RABBITMQ_PASSWORD: ${CATCHER_RABBITMQ_PASSWORD}
    depends_on:
      catcher-outgoing-queue:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - mynetwork
  
  catcher-outgoing-queue:
    image: rabbitmq:3
    environment:
      RABBITMQ_DEFAULT_USER: "rabbit"
      RABBITMQ_DEFAULT_PASS: ${CATCHER_RABBITMQ_PASSWORD}
    healthcheck:
        test: "rabbitmq-diagnostics -q ping && rabbitmq-diagnostics -q check_running"
        interval: 5s
        timeout: 15s
        retries: 10
    networks:
      - mynetwork

  deduplicator:
    # image: ghcr.io/merbinr/deduplicator:main
    build:
      context: ../deduplicator
      dockerfile: ../deduplicator/Dockerfile
    depends_on:
      catcher-outgoing-queue:
        condition: service_healthy
      deduplicator-outgoing-queue:
        condition: service_healthy
      redis-cache:
        condition: service_healthy

    environment:
      DEDUPLICATOR_INCOMING_QUEUE_HOST: "catcher-outgoing-queue"
      DEDUPLICATOR_OUTGOING_QUEUE_HOST: "deduplicator-outgoing-queue"
      DEDUPLICATOR_REDIS_CACHE_HOST: "redis-cache"

      DEDUPLICATOR_INCOMING_QUEUE_PASSWORD: ${CATCHER_RABBITMQ_PASSWORD}
      DEDUPLICATOR_OUTGOING_QUEUE_PASSWORD: test
      DEDUPLICATOR_REDIS_PASSWORD: test
    networks:
      - mynetwork

  deduplicator-outgoing-queue:
    image: rabbitmq:3
    environment:
      RABBITMQ_DEFAULT_USER: "rabbit"
      RABBITMQ_DEFAULT_PASS: test
    healthcheck:
        test: "rabbitmq-diagnostics -q ping && rabbitmq-diagnostics -q check_running"
        interval: 5s
        timeout: 15s
        retries: 10
    ports:
      - "5672:5672"
    networks:
      - mynetwork

  redis-cache:
    image: redis:6
    ports:
      - "6379:6379"
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      timeout: 15s
      retries: 10
    networks:
      - mynetwork


networks:
  mynetwork:
